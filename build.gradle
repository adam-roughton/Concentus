allprojects {
	ext.buildType = 'java' // anticipating different languages for client code
	ext.useCommon = false
	ext.libDir = rootProject.file('lib')
	
	group = 'com.adamroughton'
	version = '1.0-SNAPSHOT'
}

def javaProjects() {
	subprojects.findAll { project -> project.buildType == 'java' }
}

def getLocalLib(fileName) {
	new File(rootProject.file('lib').getAbsolutePath(), fileName)
}

// Common Configuration for Java Projects
configure(javaProjects()) {
	apply plugin: 'java'
	sourceCompatibility = 1.7

	defaultTasks 'build'
	
	repositories {
		mavenCentral()
	}

	// allow the subprojects to update flags before adding dependencies
	afterEvaluate {
		dependencies {
			if (project.name != 'Common' && useCommon) compile project(':Common')
			testCompile 'junit:junit:4.5', 'org.mockito:mockito-core:1.9.5'
		}
	}
}

project(':Common') {
	dependencies {
		compile 'com.googlecode.disruptor:disruptor:2.10.4'
		compile files(getLocalLib('zmq.jar'))
		compile 'com.esotericsoftware.kryo:kryo:2.20'
		compile 'com.esotericsoftware.minlog:minlog:1.2'
		compile 'com.netflix.curator:curator-recipes:1.3.2' // pulls in zookeeper as well
		compile 'commons-cli:commons-cli:1.2'
		compile 'it.unimi.dsi:fastutil:6.5.1'
	}
	
}

project(':Service') {
	ext.useCommon = true
	
	
}

project(':CrowdHammer') {
	ext.useCommon = true
	dependencies {
		compile project(':Service')
	}
}