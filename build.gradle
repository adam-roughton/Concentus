import org.gradle.api.tasks.Upload;

allprojects {
	ext {
		libDir = rootProject.file('lib')
		targetDir = rootProject.file('target')
	}
		
	defaultTasks 'build'
	
	group = 'com.adamroughton'
	version = '1.0-SNAPSHOT'
}

def getLocalLib(fileName) {
	new File(libDir.getAbsolutePath(), fileName)
}

subprojects {
	apply plugin: 'java'
	sourceCompatibility = 1.7

	defaultTasks 'build'
	
	repositories {
		mavenCentral()
	}

	dependencies {
		testCompile 'junit:junit:4.5', 'org.mockito:mockito-core:1.9.5'
	}
	
	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	
	artifacts {
		archives sourcesJar
	}
	
	uploadArchives {
	    repositories {
			flatDir {
				name "target"
				dirs targetDir
			}
		}
	}
	uploadArchives.dependsOn "makeTargetDir"
	
	task makeTargetDir << {
		if (!targetDir.isDirectory()) {
			targetDir.mkdirs()
		}
	}
	
	task removeTargetDir(type: Delete) {
		if (targetDir.isDirectory()) {
			delete targetDir
		}
	}
	clean.dependsOn removeTargetDir
}

project(':Core') {
	dependencies {
		compile 'com.googlecode.disruptor:disruptor:2.10.4'
		compile 'com.google.guava:guava:14.0'
		compile files(getLocalLib('zmq.jar'))
		compile 'com.esotericsoftware.kryo:kryo:2.20'
		compile 'com.esotericsoftware.minlog:minlog:1.2'
		compile 'com.netflix.curator:curator-recipes:1.3.2' // pulls in zookeeper as well
		compile 'com.netflix.curator:curator-test:1.3.2'
		compile 'commons-cli:commons-cli:1.2'
		compile 'commons-io:commons-io:2.4'
		compile 'it.unimi.dsi:fastutil:6.5.1'
		compile 'org.yaml:snakeyaml:1.11'
		compile files(getLocalLib('asg.cliche-020310.jar')) // simple interactive shell
	}
}

project(':Service') {
	dependencies {
		compile project(':Core')
	}
}

project(':CrowdHammer') {
	dependencies {
		compile project(':Service')
	}
}